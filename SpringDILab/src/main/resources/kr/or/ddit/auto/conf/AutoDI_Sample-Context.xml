<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="kr.or.ddit.springdi.sample" use-default-filters="false">
		<context:include-filter type="annotation" 
				expression="org.springframework.stereotype.Component"/>
		<context:exclude-filter type="annotation" 
				expression="org.springframework.stereotype.Controller"/>		
	</context:component-scan>

<!-- 	component-scan 으로 자동 등록되는 빈 어노테이션의 종류. -->
<!-- 	@Component -->
<!-- 	@Repository : Persistence Layer 에서 사용 -->
<!-- 	@Service : Business Logic Layer 에서 사용 -->
<!-- 	@Controller : 컨테이너에 의해 빈등록이 되고, HandlerMapping 에 의해 컨트롤러로 수집될 수 있음.  -->
	
<!-- 	@Configuration -->
	
<!-- 	@ControllerAdvice -->
<!-- 	@RestController -->
<!-- 	@RestControllerAdvice -->

<!-- 	등록된 빈을 주입받을때 사용하는 어노테이션 -->
<!-- 	@AutoWired : type 기준 주입에 사용. 동일 타입 빈이 여러개 등록된 경우, 예외 발생. -->
<!-- 	@Resource : 검색 조건 설정 가능. ex) name, type -->
<!-- 	@Inject : @AutoWired 동일 방식 주입. -->
<!-- 	@Inject + @Named : @Resource(name) 동일 방식 주입 -->
<!-- 	@Value : 빈 자체를 주입받는 것이 아닌, 빈의 프로퍼티 값을 주입함.spEL #{}, placeholder ${} -->
</beans>




















