<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

<!--  하위에 관련된 컨테이너 -->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
<!-- 	RequestMappingHandlerMapping : 	@Controller/@RequestMapping 을 트래이싱해서 컨트롤러 정보를 수집함. 
										하나의 요청을 처리할 컨트롤러를 검색.(Model과 View로 나눠야 한다.
		직접 연결하면 결합력이 발생해서 핸들러어댑터를 이용
		RequestMappingHandlerAdapter :	@RequestMapping 으로 등록된 컨트롤러(핸들러 메소드)를 실행함 -> 핸들러 어뎁터의 아규먼트를 생성할 수 있어야 한다.
		ViewResolverComposite : 등록된 ViewResolver 들이 설정된 order에 따라 동작하도록 제어함.
			<mvc:annotation-driven></mvc:annotation-driven> : 3가지 전략개체를 한번에 등록을 해줌. 				-->
	<mvc:annotation-driven></mvc:annotation-driven>

<!-- view에 관련된것들 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/views/"
		p:suffix=".jsp"
	/>
	
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" 
		p:definitions="/WEB-INF/tiles/*-definitions.xml"
	/>
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" 
		p:order="1"
	/>
	<!--  p:order="1"와같이 순서가 있어야한다. 이게 없으면 가장 나중으로 배정됨. -->
	
	<util:constant id="disalbeFeature" static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS"  />
	
	<bean id="jackson2ObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<property name="featuresToDisable">
			<array>
				<ref bean="disalbeFeature"/>
			</array>
		</property>
	</bean>
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" 
		p:objectMapper-ref="jackson2ObjectMapper"
	/>

	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" 
		p:order="2"	
	/>

	<mvc:resources location="/resources/" mapping="/resources/**" cache-period="0"/>

</beans>
